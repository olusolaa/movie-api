basePath: /
definitions:
  models.ApiError:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  models.Character:
    properties:
      birth_year:
        type: string
      eye_color:
        type: string
      gender:
        type: string
      hair_color:
        type: string
      height:
        type: string
      mass:
        type: string
      name:
        type: string
      skin_color:
        type: string
    type: object
  models.CharacterResponse:
    properties:
      message:
        type: string
      response:
        items:
          $ref: '#/definitions/models.Character'
        type: array
      status:
        type: string
    type: object
  models.Comment:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      ip:
        type: string
      movie_id:
        type: integer
    type: object
  models.CommentRequest:
    properties:
      content:
        type: string
      user_ip:
        type: string
    type: object
  models.CommentResponse:
    properties:
      message:
        type: string
      response:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      status:
        type: string
    type: object
  models.Movie:
    properties:
      comment_count:
        type: integer
      episode_id:
        type: integer
      opening_crawl:
        type: string
      release_date:
        type: string
      title:
        type: string
    type: object
  models.MovieResponse:
    properties:
      message:
        type: string
      response:
        items:
          $ref: '#/definitions/models.Movie'
        type: array
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a movie server. You can visit the GitHub repository at https://github.com/olusola/movie-api
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Go + Gin Movie API
  version: "1.0"
paths:
  /api/v1/movies:
    get:
      description: Get all movies in order of their release date from earliest to
        newest in the cache or from swapi if the cache is empty
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MovieResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      summary: Get all movies
  /api/v1/movies/{movie_id}/comments:
    get:
      description: Get all comments for a movie by movie id
      parameters:
      - description: Movie ID
        in: path
        name: movie_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CommentResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      summary: Get comments
    post:
      consumes:
      - application/json
      description: Add comments to a movie by movie id
      parameters:
      - description: Comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.CommentRequest'
      - description: MovieId
        in: path
        name: movie_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CommentResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      summary: Add comments
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
